name: Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy-development:
    name: Deploy to Development
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'development')
    environment:
      name: development
      url: http://dev.spec-gen.local
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure Docker credentials
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-

      - name: Deploy to development
        run: |
          echo "Deploying to development environment"
          echo "Registry: ${{ env.REGISTRY }}"
          echo "Image tag: ${{ steps.meta.outputs.version }}"
          # Add actual deployment commands here
          # This could be docker-compose, kubectl, or Tesseract CLI commands

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging'
    environment:
      name: staging
      url: https://staging.spec-gen.com
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure Docker credentials
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment"
          # Add staging-specific deployment commands

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    environment:
      name: production
      url: https://spec-gen.com
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure Docker credentials
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to production
        run: |
          echo "Deploying to production environment"
          echo "Version: ${{ github.ref_name }}"
          # Add production-specific deployment commands

      - name: Run health checks
        run: |
          echo "Running production health checks"
          # Add health check commands for production

      - name: Notify deployment success
        if: success()
        run: |
          echo "Production deployment successful!"
          # Add notification logic (Slack, email, etc.)

      - name: Rollback on failure
        if: failure()
        run: |
          echo "Production deployment failed, initiating rollback"
          # Add rollback commands